{"version":3,"sources":["constants/api.js","helpers/getWeatherCountry.js","components/Weather.js","hooks/useFetchWeatherCountry.js","components/Item.js","components/Items.js","components/Result.js","components/Search.js","helpers/getCountries.js","components/App.js","hooks/useFetchCountries.js","index.js"],"names":["API_ENDPOINTS","getWeatherCountry","location","a","API_REQUEST","process","axios","get","then","response","data","Weather","capital","useState","loading","state","setState","useEffect","result","useFetchWeatherCountry","weather","temp_c","src","condition","icon","alt","wind_kph","wind_dir","Item","country","name","common","population","Object","keys","languages","map","key","width","height","flags","png","capitalInfo","latlng","Items","list","onClick","cca2","Result","search","length","Search","inputValue","onChange","value","getCountries","App","setSearch","individualSelect","setIndividualSelect","useFetchCountries","countries","countriesToShow","filter","toLowerCase","indexOf","event","target","select","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b1c0c4e.chunk.js","sourcesContent":["// RESTCOUNTRIES\nexport const API_URL_COUNTRIES = 'https://restcountries.com/v3.1/all';\n// WEATHER\nexport const API_URL_WEATHER = 'https://api.weatherapi.com/v1/';\n\nexport const API_ENDPOINTS = {\n    CURRENT: 'current'\n};","import axios from \"axios\";\nimport { API_ENDPOINTS, API_URL_WEATHER } from \"../constants/api\";\nexport const getWeatherCountry = async (location) => {\n  const API_REQUEST = `${API_URL_WEATHER}${API_ENDPOINTS.CURRENT}.json?key=${process.env.REACT_APP_OWM_API_KEY}&q=${location[0]},${location[1]}&aqi=no`;\n  return axios.get(API_REQUEST).then((response) => response.data);\n};\n","import React from \"react\";\nimport { useFetchWeatherCountry } from \"../hooks/useFetchWeatherCountry\";\n// https://www.weatherapi.com/my/\nconst Weather = ({ capital, location }) => {\n  const { data: weather, loading } = useFetchWeatherCountry(location);\n  return loading ? (\n    <div>Esperando datos...</div>\n  ) : (\n    <div>\n      <h3>Weather in {capital}</h3>\n      <p>Temperature: {weather[\"current\"].temp_c}</p>\n      <img\n        src={`https:${weather[\"current\"].condition.icon}`}\n        alt={`Weather ${capital}`}\n      />\n      <p>\n        Wind: {weather[\"current\"].wind_kph} km/h / Direction:{\" \"}\n        {weather[\"current\"].wind_dir}\n      </p>\n    </div>\n  );\n};\n\nexport default Weather;\n","import { useState, useEffect } from \"react\";\nimport { getWeatherCountry } from \"../helpers/getWeatherCountry\";\n\nexport const useFetchWeatherCountry = (location) => {\n  const [state, setState] = useState({\n    data: {},\n    loading: true,\n  });\n\n  useEffect(\n    () => {\n      getWeatherCountry(location).then((result) =>\n        setState({\n          loading: false,\n          data: result,\n        })\n      );\n    },\n    [location] /*Arreglo de dependencias*/\n  );\n  return state; // { data: [], loading: true}\n};\n","import Weather from \"./Weather\";\nconst Item = ({ country }) => {\n  return (\n    <div>\n      <h2>{country.name.common}</h2>\n      <p>Capital: {country.capital}</p>\n      <p>Population: {country.population}</p>\n      <h3>Languages</h3>\n      <ul>\n        {Object.keys(country.languages).map((key) => (\n          <li key={key}>{country.languages[key]}</li>\n        ))}\n      </ul>\n      <img\n        width=\"20%\"\n        height=\"20%\"\n        src={country.flags.png}\n        alt={country.name.common}\n      />\n      <Weather\n        capital={country.capital}\n        location={country.capitalInfo.latlng}\n      />\n    </div>\n  );\n};\n\nexport default Item;\n","const Items = ({ list, onClick }) => {\n  return (\n    <ul>\n      {list.map((country) => (\n        <li key={country.cca2}>\n          {country.name.common}\n          &nbsp;&nbsp;<button \n          onClick={() => onClick(country.name.common)}>Show</button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Items;\n","import Item from \"./Item\";\nimport Items from \"./Items\";\nconst Result = ({ list, search, onClick }) => {\n  if (list.length === 1) {\n    const country = list[0];\n    return <Item country={country} />;\n  } else if (list.length > 1 && list.length <= 10) {\n    return <Items list={list} onClick={onClick} />;\n  }\n  return search !== \"\" && list.length > 10 ? (\n    <div>Too many matches, specify other filter.</div>\n  ) : (\n    <div></div>\n  );\n};\n\nexport default Result;\n","const Search = ({inputValue, onChange}) => {\n    return (\n        <div>\n            <span>Find Countries: </span>\n            <input value={inputValue} onChange={onChange} />\n        </div>\n        \n    )\n}\n\nexport default Search;","import axios from \"axios\";\nimport { API_URL_COUNTRIES } from \"../constants/api\";\nexport const getCountries = async () => {\n  const API_REQUEST = `${API_URL_COUNTRIES}`;\n  return axios.get(API_REQUEST).then((response) => response.data);\n};\n","import React, { useState } from \"react\";\nimport Result from \"./Result\";\nimport Search from \"./Search\";\nimport { useFetchCountries } from \"../hooks/useFetchCountries\";\nfunction App() {\n  const [search, setSearch] = useState(\"\");\n  const [individualSelect, setIndividualSelect] = useState(\"\");\n  const { data: countries } = useFetchCountries();\n\n  const searchData = (event) => {\n    setSearch(event.target.value);\n    setIndividualSelect('');\n  };\n\n  const handleIndividualSelection = (select) => {\n    setIndividualSelect(select);\n  }\n\n  // Filtramos en base a la búsqueda\n  const countriesToShow =\n    search === \"\" // Todos\n      ? countries\n      : (individualSelect !== '') ? // Seleccionando uno concreto\n      countries.filter((country) => {\n        return (\n          country.name.common.toLowerCase() === individualSelect.toLowerCase()\n        );\n      }): // En base a la búsqueda\n      countries.filter((country) => {\n        return (\n          country.name.common.toLowerCase().indexOf(search.toLowerCase()) > -1\n        );\n      });\n\n  return (\n    <div>\n      <Search inputValue={search} onChange={searchData} />\n      <Result onClick={handleIndividualSelection} list={countriesToShow} search={search} />\n    </div>\n  );\n}\n\nexport default App;\n","import { useState, useEffect } from \"react\";\nimport { getCountries } from \"../helpers/getCountries\";\n\nexport const useFetchCountries = () => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(\n    () => {\n      getCountries().then((result) =>\n        setState({\n          loading: false,\n          data: result,\n        })\n      );\n    },\n    [] /*Arreglo de dependencias*/\n  );\n  return state; // { data: [], loading: true}\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}